<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.intellingence.dao.WeatherDao" >
  <resultMap id="BaseResultMap" type="com.intellingence.pojo.Weather" >
    <id column="updatetimestamp" property="updatetimestamp" jdbcType="INTEGER" />
    <result column="temperature" property="temperature" jdbcType="INTEGER" />
    <result column="humidity" property="humidity" jdbcType="INTEGER" />
    <result column="uv" property="uv" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="longitude" property="longitude" jdbcType="INTEGER" />
    <result column="latitude" property="latitude" jdbcType="INTEGER" />
    <result column="longitude0left" property="longitude0left" jdbcType="INTEGER" />
    <result column="longitude0right" property="longitude0right" jdbcType="INTEGER" />
    <result column="latitude0Up" property="latitude0up" jdbcType="INTEGER" />
    <result column="latitude0Down" property="latitude0down" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      updatetimestamp, temperature, humidity, uv, address, longitude, latitude, longitude0left, 
      longitude0right, latitude0Up, latitude0Down
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.intellingence.pojo.WeatherQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from weather
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    updatetimestamp,temperature,humidity,uv,address,longitude,latitude,longitude0left,longitude0right,latitude0Up,latitude0Down
    from weather
    where updatetimestamp = #{updatetimestamp,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from weather
    where updatetimestamp = #{updatetimestamp,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.intellingence.pojo.WeatherQuery" >
    delete from weather
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.intellingence.pojo.Weather" >
    insert into weather (updatetimestamp, temperature, humidity, 
      uv, address, longitude, 
      latitude, longitude0left, longitude0right, 
      latitude0Up, latitude0Down)
    values (#{updatetimestamp,jdbcType=INTEGER}, #{temperature,jdbcType=INTEGER}, #{humidity,jdbcType=INTEGER}, 
      #{uv,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{longitude,jdbcType=INTEGER}, 
      #{latitude,jdbcType=INTEGER}, #{longitude0left,jdbcType=INTEGER}, #{longitude0right,jdbcType=INTEGER}, 
      #{latitude0up,jdbcType=INTEGER}, #{latitude0down,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.intellingence.pojo.Weather" >
    insert into weather
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="updatetimestamp != null" >
        updatetimestamp,
      </if>
      <if test="temperature != null" >
        temperature,
      </if>
      <if test="humidity != null" >
        humidity,
      </if>
      <if test="uv != null" >
        uv,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="longitude0left != null" >
        longitude0left,
      </if>
      <if test="longitude0right != null" >
        longitude0right,
      </if>
      <if test="latitude0up != null" >
        latitude0Up,
      </if>
      <if test="latitude0down != null" >
        latitude0Down,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="updatetimestamp != null" >
        #{updatetimestamp,jdbcType=INTEGER},
      </if>
      <if test="temperature != null" >
        #{temperature,jdbcType=INTEGER},
      </if>
      <if test="humidity != null" >
        #{humidity,jdbcType=INTEGER},
      </if>
      <if test="uv != null" >
        #{uv,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=INTEGER},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=INTEGER},
      </if>
      <if test="longitude0left != null" >
        #{longitude0left,jdbcType=INTEGER},
      </if>
      <if test="longitude0right != null" >
        #{longitude0right,jdbcType=INTEGER},
      </if>
      <if test="latitude0up != null" >
        #{latitude0up,jdbcType=INTEGER},
      </if>
      <if test="latitude0down != null" >
        #{latitude0down,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.intellingence.pojo.WeatherQuery" resultType="java.lang.Integer" >
    select count(*) from weather
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update weather
    <set >
      <if test="record.updatetimestamp != null" >
        updatetimestamp = #{record.updatetimestamp,jdbcType=INTEGER},
      </if>
      <if test="record.temperature != null" >
        temperature = #{record.temperature,jdbcType=INTEGER},
      </if>
      <if test="record.humidity != null" >
        humidity = #{record.humidity,jdbcType=INTEGER},
      </if>
      <if test="record.uv != null" >
        uv = #{record.uv,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=INTEGER},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=INTEGER},
      </if>
      <if test="record.longitude0left != null" >
        longitude0left = #{record.longitude0left,jdbcType=INTEGER},
      </if>
      <if test="record.longitude0right != null" >
        longitude0right = #{record.longitude0right,jdbcType=INTEGER},
      </if>
      <if test="record.latitude0up != null" >
        latitude0Up = #{record.latitude0up,jdbcType=INTEGER},
      </if>
      <if test="record.latitude0down != null" >
        latitude0Down = #{record.latitude0down,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update weather
    set updatetimestamp = #{record.updatetimestamp,jdbcType=INTEGER},
      temperature = #{record.temperature,jdbcType=INTEGER},
      humidity = #{record.humidity,jdbcType=INTEGER},
      uv = #{record.uv,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=INTEGER},
      latitude = #{record.latitude,jdbcType=INTEGER},
      longitude0left = #{record.longitude0left,jdbcType=INTEGER},
      longitude0right = #{record.longitude0right,jdbcType=INTEGER},
      latitude0Up = #{record.latitude0up,jdbcType=INTEGER},
      latitude0Down = #{record.latitude0down,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.intellingence.pojo.Weather" >
    update weather
    <set >
      <if test="temperature != null" >
        temperature = #{temperature,jdbcType=INTEGER},
      </if>
      <if test="humidity != null" >
        humidity = #{humidity,jdbcType=INTEGER},
      </if>
      <if test="uv != null" >
        uv = #{uv,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=INTEGER},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=INTEGER},
      </if>
      <if test="longitude0left != null" >
        longitude0left = #{longitude0left,jdbcType=INTEGER},
      </if>
      <if test="longitude0right != null" >
        longitude0right = #{longitude0right,jdbcType=INTEGER},
      </if>
      <if test="latitude0up != null" >
        latitude0Up = #{latitude0up,jdbcType=INTEGER},
      </if>
      <if test="latitude0down != null" >
        latitude0Down = #{latitude0down,jdbcType=INTEGER},
      </if>
    </set>
    where updatetimestamp = #{updatetimestamp,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.intellingence.pojo.Weather" >
    update weather
    set temperature = #{temperature,jdbcType=INTEGER},
      humidity = #{humidity,jdbcType=INTEGER},
      uv = #{uv,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=INTEGER},
      latitude = #{latitude,jdbcType=INTEGER},
      longitude0left = #{longitude0left,jdbcType=INTEGER},
      longitude0right = #{longitude0right,jdbcType=INTEGER},
      latitude0Up = #{latitude0up,jdbcType=INTEGER},
      latitude0Down = #{latitude0down,jdbcType=INTEGER}
    where updatetimestamp = #{updatetimestamp,jdbcType=INTEGER}
  </update>
</mapper>