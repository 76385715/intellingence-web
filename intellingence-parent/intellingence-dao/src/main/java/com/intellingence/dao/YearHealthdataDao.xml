<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.intellingence.dao.YearHealthdataDao" >
  <resultMap id="BaseResultMap" type="com.intellingence.pojo.YearHealthdata" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userID" property="userid" jdbcType="INTEGER" />
    <result column="Year" property="year" jdbcType="INTEGER" />
    <result column="NormalEC" property="normalec" jdbcType="INTEGER" />
    <result column="AbnormalEC" property="abnormalec" jdbcType="INTEGER" />
    <result column="MissedBeat" property="missedbeat" jdbcType="INTEGER" />
    <result column="PrematureBeat" property="prematurebeat" jdbcType="INTEGER" />
    <result column="PN" property="pn" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.intellingence.pojo.YearHealthdataWithBLOBs" extends="BaseResultMap" >
    <result column="HRrep" property="hrrep" jdbcType="LONGVARCHAR" />
    <result column="ECrep" property="ecrep" jdbcType="LONGVARCHAR" />
    <result column="HRRrep" property="hrrrep" jdbcType="LONGVARCHAR" />
    <result column="HRVrep" property="hrvrep" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, userID, Year, NormalEC, AbnormalEC, MissedBeat, PrematureBeat, PN
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <sql id="Blob_Column_List" >
    HRrep, ECrep, HRRrep, HRVrep
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.intellingence.pojo.YearHealthdataQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from year_healthdata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.intellingence.pojo.YearHealthdataQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from year_healthdata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    id,userID,Year,NormalEC,AbnormalEC,MissedBeat,PrematureBeat,PN,HRrep,ECrep,HRRrep,HRVrep
    ,
    <include refid="Blob_Column_List" />
    from year_healthdata
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from year_healthdata
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.intellingence.pojo.YearHealthdataQuery" >
    delete from year_healthdata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.intellingence.pojo.YearHealthdataWithBLOBs" >
    insert into year_healthdata (id, userID, Year, 
      NormalEC, AbnormalEC, MissedBeat, 
      PrematureBeat, PN, HRrep, 
      ECrep, HRRrep, HRVrep
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, 
      #{normalec,jdbcType=INTEGER}, #{abnormalec,jdbcType=INTEGER}, #{missedbeat,jdbcType=INTEGER}, 
      #{prematurebeat,jdbcType=INTEGER}, #{pn,jdbcType=INTEGER}, #{hrrep,jdbcType=LONGVARCHAR}, 
      #{ecrep,jdbcType=LONGVARCHAR}, #{hrrrep,jdbcType=LONGVARCHAR}, #{hrvrep,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.intellingence.pojo.YearHealthdataWithBLOBs" >
    insert into year_healthdata
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userID,
      </if>
      <if test="year != null" >
        Year,
      </if>
      <if test="normalec != null" >
        NormalEC,
      </if>
      <if test="abnormalec != null" >
        AbnormalEC,
      </if>
      <if test="missedbeat != null" >
        MissedBeat,
      </if>
      <if test="prematurebeat != null" >
        PrematureBeat,
      </if>
      <if test="pn != null" >
        PN,
      </if>
      <if test="hrrep != null" >
        HRrep,
      </if>
      <if test="ecrep != null" >
        ECrep,
      </if>
      <if test="hrrrep != null" >
        HRRrep,
      </if>
      <if test="hrvrep != null" >
        HRVrep,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=INTEGER},
      </if>
      <if test="normalec != null" >
        #{normalec,jdbcType=INTEGER},
      </if>
      <if test="abnormalec != null" >
        #{abnormalec,jdbcType=INTEGER},
      </if>
      <if test="missedbeat != null" >
        #{missedbeat,jdbcType=INTEGER},
      </if>
      <if test="prematurebeat != null" >
        #{prematurebeat,jdbcType=INTEGER},
      </if>
      <if test="pn != null" >
        #{pn,jdbcType=INTEGER},
      </if>
      <if test="hrrep != null" >
        #{hrrep,jdbcType=LONGVARCHAR},
      </if>
      <if test="ecrep != null" >
        #{ecrep,jdbcType=LONGVARCHAR},
      </if>
      <if test="hrrrep != null" >
        #{hrrrep,jdbcType=LONGVARCHAR},
      </if>
      <if test="hrvrep != null" >
        #{hrvrep,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.intellingence.pojo.YearHealthdataQuery" resultType="java.lang.Integer" >
    select count(*) from year_healthdata
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update year_healthdata
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.year != null" >
        Year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.normalec != null" >
        NormalEC = #{record.normalec,jdbcType=INTEGER},
      </if>
      <if test="record.abnormalec != null" >
        AbnormalEC = #{record.abnormalec,jdbcType=INTEGER},
      </if>
      <if test="record.missedbeat != null" >
        MissedBeat = #{record.missedbeat,jdbcType=INTEGER},
      </if>
      <if test="record.prematurebeat != null" >
        PrematureBeat = #{record.prematurebeat,jdbcType=INTEGER},
      </if>
      <if test="record.pn != null" >
        PN = #{record.pn,jdbcType=INTEGER},
      </if>
      <if test="record.hrrep != null" >
        HRrep = #{record.hrrep,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ecrep != null" >
        ECrep = #{record.ecrep,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.hrrrep != null" >
        HRRrep = #{record.hrrrep,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.hrvrep != null" >
        HRVrep = #{record.hrvrep,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update year_healthdata
    set id = #{record.id,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=INTEGER},
      Year = #{record.year,jdbcType=INTEGER},
      NormalEC = #{record.normalec,jdbcType=INTEGER},
      AbnormalEC = #{record.abnormalec,jdbcType=INTEGER},
      MissedBeat = #{record.missedbeat,jdbcType=INTEGER},
      PrematureBeat = #{record.prematurebeat,jdbcType=INTEGER},
      PN = #{record.pn,jdbcType=INTEGER},
      HRrep = #{record.hrrep,jdbcType=LONGVARCHAR},
      ECrep = #{record.ecrep,jdbcType=LONGVARCHAR},
      HRRrep = #{record.hrrrep,jdbcType=LONGVARCHAR},
      HRVrep = #{record.hrvrep,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update year_healthdata
    set id = #{record.id,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=INTEGER},
      Year = #{record.year,jdbcType=INTEGER},
      NormalEC = #{record.normalec,jdbcType=INTEGER},
      AbnormalEC = #{record.abnormalec,jdbcType=INTEGER},
      MissedBeat = #{record.missedbeat,jdbcType=INTEGER},
      PrematureBeat = #{record.prematurebeat,jdbcType=INTEGER},
      PN = #{record.pn,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.intellingence.pojo.YearHealthdataWithBLOBs" >
    update year_healthdata
    <set >
      <if test="userid != null" >
        userID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        Year = #{year,jdbcType=INTEGER},
      </if>
      <if test="normalec != null" >
        NormalEC = #{normalec,jdbcType=INTEGER},
      </if>
      <if test="abnormalec != null" >
        AbnormalEC = #{abnormalec,jdbcType=INTEGER},
      </if>
      <if test="missedbeat != null" >
        MissedBeat = #{missedbeat,jdbcType=INTEGER},
      </if>
      <if test="prematurebeat != null" >
        PrematureBeat = #{prematurebeat,jdbcType=INTEGER},
      </if>
      <if test="pn != null" >
        PN = #{pn,jdbcType=INTEGER},
      </if>
      <if test="hrrep != null" >
        HRrep = #{hrrep,jdbcType=LONGVARCHAR},
      </if>
      <if test="ecrep != null" >
        ECrep = #{ecrep,jdbcType=LONGVARCHAR},
      </if>
      <if test="hrrrep != null" >
        HRRrep = #{hrrrep,jdbcType=LONGVARCHAR},
      </if>
      <if test="hrvrep != null" >
        HRVrep = #{hrvrep,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.intellingence.pojo.YearHealthdataWithBLOBs" >
    update year_healthdata
    set userID = #{userid,jdbcType=INTEGER},
      Year = #{year,jdbcType=INTEGER},
      NormalEC = #{normalec,jdbcType=INTEGER},
      AbnormalEC = #{abnormalec,jdbcType=INTEGER},
      MissedBeat = #{missedbeat,jdbcType=INTEGER},
      PrematureBeat = #{prematurebeat,jdbcType=INTEGER},
      PN = #{pn,jdbcType=INTEGER},
      HRrep = #{hrrep,jdbcType=LONGVARCHAR},
      ECrep = #{ecrep,jdbcType=LONGVARCHAR},
      HRRrep = #{hrrrep,jdbcType=LONGVARCHAR},
      HRVrep = #{hrvrep,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.intellingence.pojo.YearHealthdata" >
    update year_healthdata
    set userID = #{userid,jdbcType=INTEGER},
      Year = #{year,jdbcType=INTEGER},
      NormalEC = #{normalec,jdbcType=INTEGER},
      AbnormalEC = #{abnormalec,jdbcType=INTEGER},
      MissedBeat = #{missedbeat,jdbcType=INTEGER},
      PrematureBeat = #{prematurebeat,jdbcType=INTEGER},
      PN = #{pn,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>